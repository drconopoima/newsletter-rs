name: Rust

on:
  push:
    branches:
      - main
      - cache_postgresql-client-common
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  POSTGRESQLCLIENTCOMMON_VERSION: "214ubuntu0.1"
  CACHE_SOURCE: ${{ runner.temp }}/postgresql-client-common

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cache dependencies
        id: cache-dependencies
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install netbase
        id: install-netbase
        run: sudo apt-get install -y netbase
      - name: Install and cache postgresql-client-common
        if: steps.cache-postgresqlclientcommon.outputs.cache-hit != 'true'
        run: |
          echo "github.workspace: ${{ github.workspace }}"
          echo "runner.workspace: ${{ runner.workspace }}"
          echo "runner.os: ${{ runner.os }}"
          echo "runner.temp: ${{ runner.temp }}"
          echo "CACHE_SOURCE: ${CACHE_SOURCE}"
          echo "POSTGRESQLCLIENTCOMMON_VERSION: ${POSTGRESQLCLIENTCOMMON_VERSION}"
          set -x
          sudo apt-get update
          sudo apt-get install -y postgresql-client-common="${POSTGRESQLCLIENTCOMMON_VERSION}"
          rm -fr "${CACHE_SOURCE}"
          mkdir -vp "${CACHE_SOURCE}"
          { set +x; } 2>/dev/null
          sudo dpkg -L postgresql-client-common | while IFS= read -r path; do if test -f ${path}; then cp -a --verbose --parents --target-directory "${CACHE_SOURCE}" ${path}; fi; done
      - name: Copy cached postgresql-client-common
        if: steps.cache-postgresqlclientcommon.outputs.cache-hit == 'true'
        run: |
          echo "# Using Cached packages"
          sudo cp --verbose --force --recursive "${CACHE_SOURCE}"/. /
      - name: Migrate database
        run: SKIP_CONTAINER=true ./scripts/launch_postgres.bash
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          components: clippy
          toolchain: stable
          override: true
      - name: Install netbase
        id: install-netbase
        run: sudo apt-get install -y netbase
      - name: Install and cache postgresql-client-common
        if: steps.cache-postgresqlclientcommon.outputs.cache-hit != 'true'
        run: |
          echo "github.workspace: ${{ github.workspace }}"
          echo "runner.workspace: ${{ runner.workspace }}"
          echo "runner.os: ${{ runner.os }}"
          echo "runner.temp: ${{ runner.temp }}"
          echo "CACHE_SOURCE: ${CACHE_SOURCE}"
          echo "POSTGRESQLCLIENTCOMMON_VERSION: ${POSTGRESQLCLIENTCOMMON_VERSION}"
          set -x
          sudo apt-get update
          sudo apt-get install -y postgresql-client-common="${POSTGRESQLCLIENTCOMMON_VERSION}"
          rm -fr "${CACHE_SOURCE}"
          mkdir -vp "${CACHE_SOURCE}"
          { set +x; } 2>/dev/null
          sudo dpkg -L postgresql-client-common | while IFS= read -r path; do if test -f ${path}; then cp -a --verbose --parents --target-directory "${CACHE_SOURCE}" ${path}; fi; done
      - name: Copy cached postgresql-client-common
        if: steps.cache-postgresqlclientcommon.outputs.cache-hit == 'true'
        run: |
          echo "# Using Cached packages"
          sudo cp --verbose --force --recursive "${CACHE_SOURCE}"/. /
      - name: Migrate database
        run: SKIP_CONTAINER=true ./scripts/launch_postgres.bash
      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -D warnings

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install netbase
        id: install-netbase
        run: sudo apt-get install -y netbase
      - name: Install and cache postgresql-client-common
        if: steps.cache-postgresqlclientcommon.outputs.cache-hit != 'true'
        run: |
          echo "github.workspace: ${{ github.workspace }}"
          echo "runner.workspace: ${{ runner.workspace }}"
          echo "runner.os: ${{ runner.os }}"
          echo "runner.temp: ${{ runner.temp }}"
          echo "SOURCE: ${CACHE_SOURCE}"
          echo "POSTGRESQLCLIENTCOMMON_VERSION: ${POSTGRESQLCLIENTCOMMON_VERSION}"
          set -x
          sudo apt-get update
          sudo apt-get install -y postgresql-client-common="${POSTGRESQLCLIENTCOMMON_VERSION}"
          rm -fr "${CACHE_SOURCE}"
          mkdir -vp "${CACHE_SOURCE}"
          { set +x; } 2>/dev/null
          sudo dpkg -L postgresql-client-common | while IFS= read -r path; do if test -f ${path}; then cp -a --verbose --parents --target-directory "${CACHE_SOURCE}" ${path}; fi; done
      - name: Copy cached postgresql-client-common
        if: steps.cache-postgresqlclientcommon.outputs.cache-hit == 'true'
        run: |
          echo "# Using Cached packages"
          sudo cp --verbose --force --recursive "${CACHE_SOURCE}"/. /
      - name: Migrate database
        run: SKIP_CONTAINER=true ./scripts/launch_postgres.bash
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          args: "--ignore-tests --avoid-cfg-tarpaulin"
