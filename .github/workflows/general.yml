name: Rust

on:
  push:
    branches:
      - main
      - cache_postgresql-client-common
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main

env:
  CARGO_TERM_COLOR: always
  POSTGRESQLCLIENT12_VERSION: "12.9-0ubuntu0.20.04.1"

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:12
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cache postgresql-client-12
        uses: actions/cache@v2
        id: cache-postgresqlclient12
        with:
          path: ${{ runner.temp }}/postgresql-client-12
          key: ${{ runner.os }}-12.9
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Uninstall postgresql-client-12
        run: |
          sudo apt-get remove postgresql-client-12 -y
      - name: Install netbase
        id: install-netbase
        run: sudo apt-get install -y netbase
      - name: Install postgresql-client-12
        id: install-postgresqlclient12
        if: steps.cache-postgresqlclient12.outputs.cache-hit != 'true'
        run: |
          echo "github.workspace: ${{ github.workspace }}"
          echo "runner.workspace: ${{ runner.workspace }}"
          echo "runner.os: ${{ runner.os }}"
          echo "runner.temp: ${{ runner.temp }}"
          echo "POSTGRESQLCLIENT12_VERSION: ${POSTGRESQLCLIENT12_VERSION}"
          set -x
          sudo apt-get update
          sudo apt-get install -y postgresql-client-12="${POSTGRESQLCLIENT12_VERSION}"
      - name: Copy to Cache source
        if: steps.cache-postgresqlclient12.outputs.cache-hit != 'true'
        env:
          CACHE_SOURCE: ${{ runner.temp }}/postgresql-client-12
        run: |
          rm -fr "${CACHE_SOURCE}"
          mkdir -vp "${CACHE_SOURCE}"
          { set +x; } 2>/dev/null
          sudo dpkg -L postgresql-client-12 | while IFS= read -r path; do if test -f ${path}; then cp -a --verbose --parents --target-directory "${CACHE_SOURCE}" ${path}; fi; done
      - name: Copy cached postgresql-client-12
        if: steps.cache-postgresqlclient12.outputs.cache-hit == 'true'
        env:
          CACHE_SOURCE: ${{ runner.temp }}/postgresql-client-12
        run: |
          if ! dpkg-query -l postgresql-client-12 1>/dev/null 2>&1; then
            echo "# Using Cached packages"
            sudo cp --verbose --force --recursive "${CACHE_SOURCE}"/. /
          fi
      - name: Migrate database
        run: SKIP_CONTAINER=true ./scripts/launch_postgres.bash
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test

  fmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cache postgresql-client-12
        uses: actions/cache@v2
        id: cache-postgresqlclient12
        with:
          path: ${{ runner.temp }}/postgresql-client-12
          key: ${{ runner.os }}-12.9
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Uninstall postgresql-client-12
        run: |
          sudo apt-get remove postgresql-client-12 -y
      - name: Install netbase
        id: install-netbase
        run: sudo apt-get install -y netbase
      - name: Install postgresql-client-12
        id: install-postgresqlclient12
        if: steps.cache-postgresqlclient12.outputs.cache-hit != 'true'
        run: |
          echo "github.workspace: ${{ github.workspace }}"
          echo "runner.workspace: ${{ runner.workspace }}"
          echo "runner.os: ${{ runner.os }}"
          echo "runner.temp: ${{ runner.temp }}"
          echo "POSTGRESQLCLIENT12_VERSION: ${POSTGRESQLCLIENT12_VERSION}"
          set -x
          sudo apt-get update
          sudo apt-get install -y postgresql-client-12="${POSTGRESQLCLIENT12_VERSION}"
      - name: Copy to Cache source
        if: steps.cache-postgresqlclient12.outputs.cache-hit != 'true'
        env:
          CACHE_SOURCE: ${{ runner.temp }}/postgresql-client-12
        run: |
          rm -fr "${CACHE_SOURCE}"
          mkdir -vp "${CACHE_SOURCE}"
          { set +x; } 2>/dev/null
          sudo dpkg -L postgresql-client-12 | while IFS= read -r path; do if test -f ${path}; then cp -a --verbose --parents --target-directory "${CACHE_SOURCE}" ${path}; fi; done
      - name: Copy cached postgresql-client-12
        if: steps.cache-postgresqlclient12.outputs.cache-hit == 'true'
        env:
          CACHE_SOURCE: ${{ runner.temp }}/postgresql-client-12
        run: |
          if ! dpkg-query -l postgresql-client-12 1>/dev/null 2>&1; then
            echo "# Using Cached packages"
            sudo cp --verbose --force --recursive "${CACHE_SOURCE}"/. /
          fi
      - name: Migrate database
        run: SKIP_CONTAINER=true ./scripts/launch_postgres.bash
      - name: Run clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: -- -D warnings

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cache postgresql-client-12
        uses: actions/cache@v2
        id: cache-postgresqlclient12
        with:
          path: ${{ runner.temp }}/postgresql-client-12
          key: ${{ runner.os }}-12.9
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Uninstall postgresql-client-12
        run: |
          sudo apt-get remove postgresql-client-12 -y
      - name: Install netbase
        id: install-netbase
        run: sudo apt-get install -y netbase
      - name: Install postgresql-client-12
        id: install-postgresqlclient12
        if: steps.cache-postgresqlclient12.outputs.cache-hit != 'true'
        run: |
          echo "github.workspace: ${{ github.workspace }}"
          echo "runner.workspace: ${{ runner.workspace }}"
          echo "runner.os: ${{ runner.os }}"
          echo "runner.temp: ${{ runner.temp }}"
          echo "POSTGRESQLCLIENT12_VERSION: ${POSTGRESQLCLIENT12_VERSION}"
          set -x
          sudo apt-get update
          sudo apt-get install -y postgresql-client-12="${POSTGRESQLCLIENT12_VERSION}"
      - name: Copy to Cache source
        if: steps.cache-postgresqlclient12.outputs.cache-hit != 'true'
        env:
          CACHE_SOURCE: ${{ runner.temp }}/postgresql-client-12
        run: |
          rm -fr "${CACHE_SOURCE}"
          mkdir -vp "${CACHE_SOURCE}"
          { set +x; } 2>/dev/null
          sudo dpkg -L postgresql-client-12 | while IFS= read -r path; do if test -f ${path}; then cp -a --verbose --parents --target-directory "${CACHE_SOURCE}" ${path}; fi; done
      - name: Copy cached postgresql-client-12
        if: steps.cache-postgresqlclient12.outputs.cache-hit == 'true'
        env:
          CACHE_SOURCE: ${{ runner.temp }}/postgresql-client-12
        run: |
          if ! dpkg-query -l postgresql-client-12 1>/dev/null 2>&1; then
            echo "# Using Cached packages"
            sudo cp --verbose --force --recursive "${CACHE_SOURCE}"/. /
          fi
      - name: Migrate database
        run: SKIP_CONTAINER=true ./scripts/launch_postgres.bash
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          args: "--ignore-tests --avoid-cfg-tarpaulin"
